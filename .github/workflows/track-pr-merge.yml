name: Track PR Merge Statistics

on:
  pull_request:
    types: [closed]

jobs:
  track-developer-stats:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Extract PR Details
        id: pr_details
        run: |
          # Extract PR information from GitHub context
          cat << EOF > pr-details.json
          {
            "prNumber": ${{ github.event.pull_request.number }},
            "user": "${{ github.event.pull_request.user.login }}",
            "mergedDate": "${{ github.event.pull_request.merged_at }}",
            "title": "${{ github.event.pull_request.title }}",
            "body": $(echo '${{ github.event.pull_request.body }}' | jq -Rs .),
            "filesChanged": ${{ github.event.pull_request.changed_files }},
            "additions": ${{ github.event.pull_request.additions }},
            "deletions": ${{ github.event.pull_request.deletions }},
            "mergedBy": "${{ github.event.pull_request.merged_by.login }}",
            "repository": "${{ github.repository }}",
            "headSha": "${{ github.event.pull_request.head.sha }}",
            "baseSha": "${{ github.event.pull_request.base.sha }}"
          }
          EOF

          echo "PR Details extracted:"
          cat pr-details.json

      - name: Get Changed Files List
        id: changed_files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the list of changed files
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
            > changed-files.json

          # Extract just the necessary file information
          jq '[.[] | {filename: .filename, additions: .additions, deletions: .deletions, changes: .changes, status: .status}]' changed-files.json > files-summary.json

          echo "Changed files:"
          cat files-summary.json

      - name: Combine PR Data
        run: |
          # Merge PR details with changed files
          jq -s '.[0] + {changedFiles: .[1]}' pr-details.json files-summary.json > complete-pr-data.json

          echo "Complete PR data:"
          cat complete-pr-data.json

      - name: Estimate Development Time
        id: estimate
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "10"
          direct_prompt: |
            Estimate development time for this merged PR and output ONLY the estimated hours as a number (e.g., "5.5" or "12.0").

            PR Data:
            PR Number: ${{ github.event.pull_request.number }}
            User: ${{ github.event.pull_request.user.login }}
            Title: ${{ github.event.pull_request.title }}
            Files Changed: ${{ github.event.pull_request.changed_files }}
            Additions: ${{ github.event.pull_request.additions }}
            Deletions: ${{ github.event.pull_request.deletions }}
            Merged Date: ${{ github.event.pull_request.merged_at }}
            Workspace ID: cme3e54et00028onui9epyx4w

            ## Estimation Process:

            1. **Parse the PR data** from the JSON above

            2. **Calculate Base Time** from total lines changed:
               - Less than 50 lines: 1.5 hours
               - 50-200 lines: 3 hours
               - 200-500 lines: 6 hours
               - Over 500 lines: 12 hours

            3. **Apply Multipliers** based on PR type (from title):
               - "feat:" prefix = 1.5x multiplier (new feature)
               - "fix:" prefix = 1.0x multiplier (bug fix)
               - "refactor:" prefix = 1.3x multiplier
               - "docs:" prefix = 0.5x multiplier
               - "test:" prefix = 0.8x multiplier
               - "chore:" prefix = 0.7x multiplier

            4. **Add Time for Special Files**:
               - Test files (*.test.js, *.spec.js, *.test.tsx): +25% of base time
               - Documentation (*.md files): +15% of base time
               - Database migrations (prisma/migrations/*): +2 hours
               - GitHub workflows (.github/workflows/*): +1 hour
               - Config files (package.json, tsconfig.json, etc.): +0.5 hours
               - Multiple file types (e.g., both frontend and backend): +20% of base time

            5. **Analyze the changed files** from changedFiles array:
               - Check if any are test files
               - Check if any are documentation
               - Check if any are migrations
               - Check if any are GitHub workflows
               - Check if both .jsx/.tsx and .js/.ts files are present (frontend + backend)

            6. **Calculate Final Estimate**:
               - Start with base time
               - Apply PR type multiplier
               - Add percentages for tests/docs if present
               - Add fixed hours for special file types
               - Round to nearest 0.5 hour

            7. **Return Result**:
               Output ONLY the final calculated hours as a decimal number.
               Do not include any other text, markdown, or explanation.
               Just the number (e.g., "5.5" or "12.0").

      - name: Extract hours from Claude execution log
        id: extract_hours
        run: |
          set -euo pipefail

          LOG="${{ steps.estimate.outputs.execution_file }}"
          if [ -z "${LOG:-}" ]; then
            LOG="/home/runner/work/_temp/claude-execution-output.json"
          fi

          echo "Execution log: $LOG"
          if [ ! -f "$LOG" ]; then
            echo "Execution file not found: $LOG"
            exit 1
          fi

          # Pref
