name: Check PR Statuses

on:
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'
  workflow_dispatch:
    # Allow manual trigger for testing
    inputs:
      pageId:
        description: 'Page/Variant ID to check (optional)'
        required: false
        default: 'cme78g7a700018ovg8p0ijuv0'

jobs:
  check-pr-statuses:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: read
      issues: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code CLI
        run: |
          npm install -g @anthropic/claude-code
      
      - name: Configure Claude Code
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Set up Claude Code configuration
          export CLAUDE_API_KEY="${ANTHROPIC_API_KEY}"
      
      - name: Run PR Status Check
        id: check_status
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PAGE_ID: ${{ github.event.inputs.pageId || 'cme78g7a700018ovg8p0ijuv0' }}
        run: |
          echo "Checking PR statuses for page ID: ${PAGE_ID}"
          
          # Run the check-pr-statuses command
          # Note: This requires Claude Code CLI to be configured to run command files
          claude code << 'EOF'
          Execute the check-pr-statuses command for page ID: ${PAGE_ID}
          
          Steps:
          1. Fetch all PRs for page ID: ${PAGE_ID}
          2. Check each PR status via GitHub API
          3. Count merged PRs and commits
          4. Update statistics in database
          5. Delete processed PRs from tracking
          EOF
      
      - name: Create Summary
        if: always()
        run: |
          echo "## PR Status Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Page ID**: ${{ env.PAGE_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for detailed statistics." >> $GITHUB_STEP_SUMMARY
      
      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Optional: Create an issue on failure
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[Automated] PR Status Check Failed - ${new Date().toISOString()}`,
              body: `The automated PR status check failed. Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`,
              labels: ['automated', 'bug']
            });
            console.log(`Created issue #${issue.data.number}`);